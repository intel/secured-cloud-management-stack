---
- name: Download kubespray {{ kubespray_url }}
  get_url:
    url: "{{ kubespray_url }}"
    dest: /tmp/kubespray.tar.gz
  register: _download_kubespray
  until: _download_kubespray is not failed
  retries: 5

- name: Remove existing kubespray directory 
  file:
    path: /tmp/kubespray
    state: absent

- name: Decompress kubespray
  shell: mkdir /tmp/kubespray && tar -xzf /tmp/kubespray.tar.gz -C /tmp/kubespray --strip-components 1
  args:
    warn: false

- name: Configure kubespray inventory
  block:
    - name: Copy inventory/sample as inventory/mycluster
      command: cp -rfp inventory/sample inventory/mycluster
      args:
        chdir: /tmp/kubespray

    - name: Update Ansible inventory file with inventory builder
      shell: '. {{ targetenv }}/bin/activate && 
            CONFIG_FILE=/tmp/kubespray/inventory/mycluster/hosts.yaml
            HOST_PREFIX="{{ kuberspray_host_prefix }}"
            KUBE_CONTROL_HOSTS="{{ kuberspray_masters_count }}"
            python3 /tmp/kubespray/contrib/inventory_builder/inventory.py
            {{ kubespray_hosts }}'
      register: result

    - debug: msg="{{ result.stdout_lines }}"

    - name: Update Ansible inventory file with specific master nodes and worker nodes
      shell: '. {{ targetenv }}/bin/activate && 
            CONFIG_FILE=/tmp/kubespray/inventory/mycluster/hosts.yaml
            python3 "{{ role_path }}"/files/set_master_and_worker.py 
            {{ kubespray_master_hosts }} {{ kubespray_worker_hosts }}'
      register: result

    - debug: msg="{{ result.stdout_lines }}"

- name: Configure kubespray vars
  block:
    - name: Set kubernetes version to {{ kubernetes_version }}
      shell: "sed -r -i 's/^kube_version:(.)*/kube_version: {{ kubernetes_version }}/' /tmp/kubespray/inventory/mycluster/group_vars/k8s_cluster/k8s-cluster.yml"
    
    - name: Set container engine to {{ container_engine }}
      shell: "sed -r -i 's/^container_manager:(.)*/container_manager: {{ container_engine }}/' /tmp/kubespray/inventory/mycluster/group_vars/k8s_cluster/k8s-cluster.yml"
    
    - name: Set http_proxy
      shell: "sed -r -i 's|(.)*http_proxy:(.)*|http_proxy: {{ http_proxy }}|' /tmp/kubespray/inventory/mycluster/group_vars/all/all.yml"
      when: http_proxy != ""
    - name: Set https_proxy
      shell: "sed -r -i 's|(.)*https_proxy:(.)*|https_proxy: {{ https_proxy }}|' /tmp/kubespray/inventory/mycluster/group_vars/all/all.yml"
      when: https_proxy != ""

    - name: Check if fix OpenEuler hostname module bug
      shell: if [ "$(grep openEuler\"\) /tmp/kubespray/roles/bootstrap-os/tasks/main.yml)" != "" ]; then echo "yes"; else echo "no"; fi
      register: _check_fix_openeuler
    - name: Fix OpenEuler hostname module bug (1/2)
      shell: sed -i '/not is_fedora_coreos/a\    - not ansible_distribution == "openEuler"' /tmp/kubespray/roles/bootstrap-os/tasks/main.yml
      when: _check_fix_openeuler.stdout == "no"
    - name: Fix OpenEuler hostname module bug (2/2)
      shell: sed -i 's/"Fedora")/"Fedora"\n    or ansible_distribution == "openEuler")/' /tmp/kubespray/roles/bootstrap-os/tasks/main.yml
      when: _check_fix_openeuler.stdout == "no"

    - name: Disable RHEL subscription-manager
      shell: "sed -r -i 's/(.)*rhel_enable_repos:(.)*/rhel_enable_repos: false/' /tmp/kubespray/inventory/mycluster/group_vars/all/offline.yml"


- name: Deploy kubespray with ansible playbook (See /tmp/kubespray.log for detail)
  shell: '. {{ targetenv }}/bin/activate && 
        ansible-playbook -i /tmp/kubespray/inventory/mycluster/hosts.yaml  --become --become-user=root /tmp/kubespray/cluster.yml > /tmp/kubespray.log'
